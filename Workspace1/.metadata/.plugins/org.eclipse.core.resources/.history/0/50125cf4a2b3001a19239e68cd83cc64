package grid;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.Date;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.Platform;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.ie.InternetExplorerOptions;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

public class GridTestCase {
	
	
	public ThreadLocal<DesiredCapabilities> dc = new ThreadLocal<DesiredCapabilities>();
	public static DesiredCapabilities cap;
	
	public ThreadLocal<WebDriver> rdriver = new ThreadLocal<WebDriver>();
	public static RemoteWebDriver driver;
	
	public WebDriver getDriver() {
		return rdriver.get();
	}
	
	public DesiredCapabilities getDesiredCapabilities() {
		return dc.get();
	}
	
	public void setDriver(WebDriver driver) {
		rdriver.set(driver);
	}
	
	public void setCapabilities(DesiredCapabilities cap) {
		dc.set(cap);
	}
	
	@Test(dataProvider="getData")
	public void readData(String browser, String Url) throws MalformedURLException {
		Date d = new Date();
		if (browser.equals("chrome")) {
			cap = DesiredCapabilities.chrome();
			cap.setBrowserName("chrome");
			cap.setPlatform(Platform.ANY);
			ChromeOptions options = new ChromeOptions();
			options.merge(cap);

		} else if (browser.equals("iexplore")) {
			cap = DesiredCapabilities.internetExplorer();
			cap.setBrowserName("iexplore");
			cap.setPlatform(Platform.WINDOWS);
			InternetExplorerOptions options = new InternetExplorerOptions();
			options.merge(cap);

		} else if (browser.equals("firefox")) {
			cap = DesiredCapabilities.firefox();
			cap.setBrowserName("firefox");
			cap.setPlatform(Platform.ANY);
			FirefoxOptions options = new FirefoxOptions();
			options.merge(cap);
		}
	rdriver = new RemoteWebDriver(new URL("http://localhost:4444/wd/hub"), cap);
	rdriver.get(Url);
	rdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
	rdriver.manage().window().maximize();
	System.out.println(browser+ " "+ Url + " "+rdriver.getTitle()+" "+d);
	rdriver.quit();
	}
	
	
	@DataProvider(parallel = true)
	public Object[][] getData() {
		Object[][] data = new Object[6][2];
		
		data[0][0] = "chrome";
		data[0][1] = "http://google.com";
		
		data[1][0] = "chrome";
		data[1][1] = "http://gmail.com";
		
		data[2][0] = "chrome";
		data[2][1] = "http://google.com";
		
		data[3][0] = "chrome";
		data[3][1] = "http://gmail.com";
		
		data[4][0] = "chrome";
		data[4][1] = "http://gmail.com";
		
		data[5][0] = "chrome";
		data[5][1] = "http://google.com";
		
		
		return data;
	}

}
